#!/bin/sh


if ! test $(id --user) = 0;then
    exec sudo $0 $@
fi

test -d ./cache/apt || mkdir -p ./cache/apt
test -d ./cache/parts.d || mkdir ./cache/parts.d

test -d ./config || mkdir -p ./config
test -d ./log || mkdir ./log

if test -f ./config/config.class;then CLASS_O=$(cat ./config/config.class);else CLASS_O="";fi
if test -f ./config/config.dist;then DIST_O=$(cat ./config/config.dist);else DIST_O="";fi
if test -f ./config/config.osname;then OSNAME_O=$(cat ./config/config.osname);else OSNAME_O="";fi
if test -f ./config/config.source;then SOURCE_O=$(cat ./config/config.source);else SOURCE_O="";fi
if test -f ./config/config.datadir;then DATA_O=$(cat ./config/config.datadir);else DATA_O="";fi
					  
INTER_O="1"
FORCE_O="1"
YES_O="1"
QEMU_O="1"
NO_O="1"

CONFIG_O="1"

print_params(){
    echo "      source: $SOURCE_O"
    echo "     datadir: $DATA_O"
    echo "      osname: $OSNAME_O"
    echo "       class: $CLASS_O"
}

on_exit(){
    puavo-img-mount --umount $SOURCE

    test -f $IMAGE.img && chown    --reference .. $IMAGE.img
    test -f $IMAGE-inst.img && chown    --reference .. $IMAGE-inst.img
    
    chown -R --reference .. cache
    chown -R --reference .. config
    chown -R --reference .. log
}


while [ $# -gt 0 ]; do
    case $1 in
	-h|--help)
	    shift
	    echo "Usage: $(basename $0) [config_opts]      (configure)"
	    echo "       $(basename $0) IMAGE.img          (interactive)"
	    echo "       $(basename $0) [runtime_opts]     (batch)"
	    echo
	    echo "Patch a PuavoOS image and (eventualy) compress a new image." 
	    echo
	    echo "Config options:"
	    echo "    -s, --source SOURCE        set source to SOURCE"
	    echo "    -d, --datadir DATADIR      set datadir to DATADIR"
 	    echo "    -o, --osname OSNAME        set image osname to OSNAME"
	    echo "    -c, --class CLASS          set image class to CLASS"
 	    echo "    -h, --help                 show this help"
            echo
            echo " Stored params are:"
	    print_params
            echo
	    echo "Runtime options:"
 	    echo "    -i, --interactice          force interactive shell"
 	    echo "    -f, --force                force building image even with errors"
	    echo "    -n, --noimage              do not build image even without errors"
 	    echo "    -y, --yes                  do not ask at start"
 	    echo "    -q, --qemu                 do also make a qemu image"
	    echo
	    exit 0
	    ;;

	#config 
	-s|--source)
	    shift
	    SOURCE_O=$1
	    CONFIG_O=0
	    echo $1 > ./config/config.source
	    shift
	    ;;
	-c|--class)
	    shift
	    CLASS_O=$1
	    CONFIG_O=0
	    echo $1 > ./config/config.class
	    shift
	    ;;
	-o|--osname)
	    shift
	    OSNAME_O=$1
	    CONFIG_O=0
	    echo $1 > ./config/config.osname
	    shift
	    ;;
	-d|--datadir)
	    shift
	    DATA_O=$1
	    CONFIG_O=0
	    echo $1 > ./config/config.datadir
	    shift
	    ;;

	#runtime
	-i|--interactive)
	    shift
	    INTER_O="0"
	    ;;
	-y|--yes)
	    shift
	    YES_O="0"
#	    echo "option --yes $YES_O"
	    ;;
	-f|--force)
	    shift
	    FORCE_O="0"
	    ;;
	-q|--qemu)
	    shift
	    QEMU_O="0"
	    ;;
	-n|--noimage)
	    shift
	    NO_O="0"
	    ;;
	--)
	    shift
	    break
	    ;;
	-*)
	    echo "error: invalid argument '$1'"
	    exit 1
	    ;;
	*)
	    break
	    ;;
    esac
done

if test $CONFIG_O = 0;then
    echo "info: new config set. exiting ..."
    exit 0
fi

if [ $# -eq 1 ]; then
    SOURCE_O=$1
    INTER_O=0
fi

#check source image
if test -z "$SOURCE_O";then
    echo "error: source param not set"
    exit 1
fi
if test -h $SOURCE_O;then
    ANS="$(readlink -e $SOURCE_O)"
    if ! test -n "$ANS";then
	echo "error: source link not ok"
	exit 1
    fi
else
    if ! test -e $SOURCE_O;then
	echo "error: source file not found"
	exit 1
    fi	
fi

#check datadir
if test -n "$DATA_O";then
    if ! test -d $DATA_O;then
        echo "error: datadir not found"
        exit 1
    fi
else
    echo "error: datadir not set"
    exit 1
fi

#echo "debug: INTER_O = $INTER_O YES_O = $YES_O" 
# ask at start
if test $INTER_O = 1 -a $YES_O = 1;then
    echo "do you want to build with the following params:"
    echo
    print_params
    echo
    echo -n "type [Y|n]: "
    read ANS
    if ! test "$ANS" = "" -o "$ANS" = "y" -o "$ANS" = "Y" -o "$ANS" = "j" -o "$ANS" = "J";then 
        exit 0
    fi
else
    echo "building image with:"
    print_params
    echo
fi

###################################################################################
#                     ready now. mount the source image                           #
###################################################################################

SOURCE=$SOURCE_O
DATAPATH=$DATA_O
CHROOT=$(basename -s .img $SOURCE)

sudo puavo-img-mount $SOURCE

###################################################################################
#                   extract osname,class,dist from image                          #
###################################################################################

if test -e $CHROOT/etc/puavo-image/name;then
    NAME=$(cat $CHROOT/etc/puavo-image/name)
else
    echo "error: $CHROOT does not seem to be a puavo-os image"
    on_exit
    exit 1
fi

#calc parameters
OSNAME_I=$(echo $NAME|cut -d- -f1)
CLASS_I=$(echo $NAME|cut -d- -f3)
DIST=$(echo $NAME|cut -d- -f4)

if test -n "$OSNAME_O";then
    OSNAME=$OSNAME_O
else
    OSNAME=$OSNAME_I
fi

if test -n "$CLASS_O";then
    CLASS=$CLASS_O
else
    CLASS=$CLASS_I
fi

###################################################################################
#                 the image is mounted now. we prepare chroot                     #
###################################################################################

#copy datadir
test -d $CHROOT/install/ || mkdir -p $CHROOT/install/
cp -r  $DATAPATH/bin.d $CHROOT/install/
cp -r  $DATAPATH/files.d $CHROOT/install/
cp -r  $DATAPATH/lists.d $CHROOT/install/
cp -r  $DATAPATH/debs.d $CHROOT/install/

# copy parts.d/*
CACHEDIR="./cache/parts.d"
DATADIR="$DATAPATH/parts.d"

test -d $CHROOT/install/parts.d || mkdir -p $CHROOT/install/parts.d
if test -d $DATADIR;then
    if test -n "$(ls $DATADIR)";then

        for P in $(ls $DATADIR);do
	    MD5SUM=$(tar -cf - $DATADIR/$P|md5sum|cut -d\  -f1)
	    echo $MD5SUM > $CACHEDIR/$P.md5sum
            if test -f $CACHEDIR/$P/md5sum;then
            	C_MD5SUM=$(cat $CACHEDIR/$P/md5sum)
	    else
		C_MD5SUM=""
	    fi
	    if test "$MD5SUM" = "C_MD5SUM";then
		echo "copy $P from chache"
		cp -r $CACHEDIR/$P $CHROOT/install/parts.d/
	    else
		echo "copy $P from date"
		cp -r $DATADIR/$P $CHROOT/install/parts.d/
		cp -r $CACHEDIR/$P.md5sum $CHROOT/install/parts.d/$P/md5sum
		touch $CACHEDIR/$P.empty
	    fi
        done
	
    fi
fi

#call pre-chroot-hooks
if test -d $DATAPATH/pre.d;then
    if test -n "$(ls $DATAPATH/pre.d|grep .sh)";then
        echo "**************************************************************"
        echo "                      pre-chroot                             *"
        echo "**************************************************************"
        for B in $(ls $DATAPATH/pre.d);do
	    if test -x $DATAPATH/pre.d/$B;then
                echo "$B"
		$DATAPATH/pre.d/$B $CHROOT $(pwd)
		#if test $? = 1;then ERROR=1;fi
	    fi 
        done
    fi
fi

#copy chroot binary to chroot
cat << 'EOF'  > $CHROOT/usr/local/bin/puavo-chroot-apply
#!/bin/sh

echo "**************************************************************" 1>&2
echo "*                                                            *" 1>&2
echo "*                     Hello Chroot                           *" 1>&2
echo "*                                                            *" 1>&2
echo "**************************************************************" 1>&2
UPDATED=1
ERROR=0

#bin
if test -d /install/bin.d;then
    if test -n "$(ls /install/bin.d|grep .sh)";then
        echo "**************************************************************" 1>&2
        echo "                          bin                                *" 1>&2
        echo "**************************************************************" 1>&2
        for B in $(ls /install/bin.d);do
	    if test -x /install/bin.d/$B;then
                echo $B                                                       1>&2
		/install/bin.d/$B
		if test $? = 1;then ERROR=1;fi
	    fi 
        done
    fi
fi

#files
if test -d /install/files.d;then
    if test -n "$(ls /install/files.d/)";then
	echo "**************************************************************" 1>&2
        echo "                         files                               *" 1>&2
        echo "**************************************************************" 1>&2
        cp -r /install/files.d/* /
        echo "ok"                                                             1>&2
	if test $? = 1;then ERROR=1;fi
        echo "done"
    fi
fi


#lists
if test -d /install/lists.d;then
    LISTS="$(ls /install/lists.d|grep .list|grep -v off|xargs)"
    if test -n "$LISTS";then
        echo "**************************************************************" 1>&2
        echo "                         lists                               *" 1>&2
        echo "**************************************************************" 1>&2
        echo "$LISTS :"							      1>&2
        apt-get update
	if test $? = 1;then ERROR=1;fi
	UPDATED=0
        PAKS=$(cat /install/lists.d/*list|xargs)
        echo $PAKS | fmt                                                      1>&2
        apt-get -y install $PAKS
	if test $? = 1;then ERROR=1;fi
    fi
    echo "done"
fi

#debs
if test -d /install/debs.d;then
    if test -n "$(ls /install/debs.d|grep .deb)";then
        echo "**************************************************************" 1>&2
        echo "                         debs                                *" 1>&2
        echo "**************************************************************" 1>&2
        for D in $(ls /install/debs.d/*.deb);do
             echo $(basename $D)                                              1>&2
             dpkg -i $D
             #if test $? = 1;then ERROR=1;fi
        done
        if test $UPDATED = 1;then
	    apt-get update
    	    if test $? = 1;then ERROR=1;fi
	    UPDATED=0
	fi
	apt-get -y -f install
	if test $? = 1;then ERROR=1;fi
    fi
fi

#parts
if test -d /install/parts.d;then
    if test -n "$(ls /install/parts.d/)";then
        echo "**************************************************************" 1>&2
        echo "                         parts                               *" 1>&2
        echo "**************************************************************" 1>&2
	if test $UPDATED = 1;then
	    apt-get update
	fi
        for P in $(ls /install/parts.d/);do
            if test -x /install/parts.d/$P/install.sh;then
                 echo $P                                                       1>&2
                 /install/parts.d/$P/install.sh
  	         if test $? = 1;then ERROR=1;fi
            fi
        done
	apt-get -f install
	if test $? = 1;then ERROR=1;fi
    fi
fi

echo "**************************************************************" 1>&2
echo "*                                                            *" 1>&2
echo "*                     Goodbye Chroot                         *" 1>&2
echo "*                                                            *" 1>&2
echo "**************************************************************" 1>&2
echo "Status is $ERROR"
exit $ERROR
EOF
chmod +x $CHROOT/usr/local/bin/puavo-chroot-apply

###################################################################################
#             the chroot is set up. chroot starts now                             #
###################################################################################

#copy cached apt
cp -r cache/apt/* $CHROOT/var/cache/apt/archives/.

#chroot
if test $INTER_O = 1;then
    echo "/usr/local/bin/puavo-chroot-apply" | puavo-dir-chroot $CHROOT > ./log/last-build.log 
else
    puavo-dir-chroot $CHROOT
fi
RET=$?

#copy apt cache back
rsync -ra  --delete --size-only  $CHROOT/var/cache/apt/archives/ cache/apt/

# cpy parts back
CACHEDIR="./cache/parts.d"
DATADIR="$DATAPATH/parts.d"
if test -d $DATADIR;then
    if test -n "$(ls $DATADIR)";then

        for P in $(ls $DATADIR);do
	    if test -f $CACHEDIR/$P.empty;then
		echo "copyback $P from chroot"
		cp -r $CHROOT/install/parts.d/$P $CACHEDIR/.
		rm $CACHEDIR/$P.empty
	    fi
        done

    fi
fi

###################################################################################
#                                we start making the image                        #
###################################################################################

IMAGE=""
#echo "debug $NO_O $RET $FORCE_O" 

if test $NO_O = 1; then 
  if test $RET = 0 -o $FORCE_O = 0;then
	
     echo
     echo "***************************************************************"
     echo "*                 ok, building image                           *"
     echo "***************************************************************"

#    clean chroot
     rm -r $CHROOT/install
     rm -r $CHROOT/var/cache/apt/archives/*

#    compose new image name
     VERSION=$(date +%Y-%m-%d-%H%M%S)
     IMAGE="${OSNAME}-os-${CLASS}-${DIST}-${VERSION}-amd64"

#    save source image names
     if ! test $CHROOT/etc/puavo-image/base_name;then
	 cp $CHROOT/etc/puavo-image/name $CHROOT/etc/puavo-image/base_name
     fi
     if ! test $CHROOT/etc/puavo-image/base_release;then
	 cp $CHROOT/etc/puavo-image/release $CHROOT/etc/puavo-image/base_release
     fi
     if ! test $CHROOT/etc/puavo-image/base_class;then
	 cp $CHROOT/etc/puavo-image/class $CHROOT/etc/puavo-image/base_class
     fi
     
#    store names in image
     echo "${IMAGE}.img" > $CHROOT/etc/puavo-image/name
     echo "$( cat $CHROOT/etc/puavo-image/release ) (${VERSION})" > $CHROOT/etc/puavo-image/release
     echo "$CLASS" > $CHROOT/etc/puavo-image/class

     echo $IMAGE.img
     
#    make compressed image
     puavo-dir-clone --dont-update-name --type squashfs $CHROOT ${IMAGE}.img

#    maybe make qemu image too
     if test $QEMU_O = 0;then
	  echo "building qemu image"
          puavo-img-installer $IMAGE.img  > ./log/last-build.log 
     fi

  else
    echo
    echo "**************************************************************"
    echo "*   error: an error occured in chrooot. not bulding image    *"
    echo "**************************************************************"
  fi
else
    echo
    echo "**************************************************************"
    echo "*      info: switch --noimage set. not bulding image         *"
    echo "**************************************************************"
fi    
###################################################################################
#          image is (maybe) build. clean up                                        #
###################################################################################

if test -f ./log/last-build.log -a -n "$IMAGE";then
    mv ./log/last-build.log ./log/$IMAGE.log
fi

on_exit

exit $?

	
